/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.RegistroCategoria;
import controlador.RegistroPelicula;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Categoria;
import modelo.Pelicula;

/**
 *
 * @author Bastian
 */
public class Agregar extends javax.swing.JFrame {

    /**
     * Creates new form Agregar
     */
    public Agregar() {
        initComponents();
        cargarCombo();

    }

    private void cargarCombo() {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cboCategoria.getModel();

        modelo.removeAllElements();

        RegistroCategoria rc = new RegistroCategoria();

        ArrayList<Categoria> lista = rc.buscarTodasCategorias();
        modelo.addElement("Seleccione");
        for (Categoria tmp : lista) {
            modelo.addElement(tmp);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAgregarPelicula = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        chkFormato4k = new javax.swing.JCheckBox();
        cboCategoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Películas");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Agregar Película");

        jLabel2.setText("Código:");

        jLabel3.setText("Precio:");

        jLabel4.setText("¿Tiene formato 4K?");

        jLabel5.setText("Nombre:");

        jLabel6.setText("Categoría:");

        btnAgregarPelicula.setText("Agregar Película");
        btnAgregarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPeliculaActionPerformed(evt);
            }
        });

        chkFormato4k.setText("Disponible en 4K");
        chkFormato4k.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFormato4kActionPerformed(evt);
            }
        });

        cboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAgregarPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(chkFormato4k, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombre)
                                .addComponent(txtPrecio)
                                .addComponent(txtCodigo)
                                .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(chkFormato4k))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(btnAgregarPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkFormato4kActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFormato4kActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFormato4kActionPerformed

    private void btnAgregarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPeliculaActionPerformed
        int codigo, precio, id_categoria = 0;
        String formato4k, nombre;

        try {
            codigo = Integer.parseInt(txtCodigo.getText());
            if (codigo < 10000 || codigo > 99999) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un código válido \nEntre 10000 y 99999 inclusive", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtCodigo.requestFocus();
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el código (Numérico)", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtCodigo.requestFocus();
            return;
        }

        try {
            precio = Integer.parseInt(txtPrecio.getText());
            if (precio <= 1000) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un precio mayor a 1000", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtPrecio.requestFocus();
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el precio (Numérico)", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtPrecio.requestFocus();
            return;
        }

        if (chkFormato4k.isSelected()) {
            formato4k = "S";
        } else {
            formato4k = "N";
        }

        nombre = txtNombre.getText();
        if (nombre.length() < 3) {
            JOptionPane.showMessageDialog(this, "El nombre debe poseer Mínimo 3 letras", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocus();
            return;
        } else if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el nombre", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocus();
            return;
        }

        if (cboCategoria.getModel().getSize() != 0) { //Validar lista vacía

            if (cboCategoria.getSelectedItem().equals("Seleccione")) {
                JOptionPane.showMessageDialog(this, "Seleccione categoría", "Advertencia", JOptionPane.WARNING_MESSAGE);
                cboCategoria.requestFocus();
                return;
            }

            Categoria cate = (Categoria) cboCategoria.getSelectedItem();

            id_categoria = cate.getId();

        } else {
            JOptionPane.showMessageDialog(this, "Error al cargar categorías", "Advertencia", JOptionPane.WARNING_MESSAGE);
            cboCategoria.requestFocus();
            return;
        }

        Pelicula pelicula = new Pelicula(codigo, precio, id_categoria, formato4k, nombre);
        RegistroPelicula rp = new RegistroPelicula();

        if (rp.buscarPeliculaPorCodigo(codigo).getCodigo() != 0) {
            JOptionPane.showMessageDialog(this, "Ups! \nLa pelicula ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (rp.agregarPelicula(pelicula)) {
            JOptionPane.showMessageDialog(this, "Se agregó la película con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Ups!\nError al ingresar la película", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarPeliculaActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarPelicula;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JCheckBox chkFormato4k;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
